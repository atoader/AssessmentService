//Source file generated by the Universal OpenMath Machine

package org.openmath.www.cd
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

trait fns1 extends TheoryScala {
  def fns1_lambda(v1: VarDecl, x2: Term): Term

}

object fns1 extends TheoryScalaAux {
  val _base = DPath(utils.URI("http", "www.openmath.org") / "cd")
  val _path = _base ? "fns1"

  object lambda extends ConstantScala {
    val parent = _path
    val name = "lambda"
    def apply(vs1: Context, s2: Term) = OMBIND(OMID(this.path), vs1, s2)
    def unapply(t: Term): Option[(Context, Term)] = t match {
      case OMBIND(OMID(this.path), vs1, s2) => Some((vs1, s2))
      case _ => None
    }
  }


}

