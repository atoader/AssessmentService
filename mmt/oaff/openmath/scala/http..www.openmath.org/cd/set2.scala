//Source file generated by the Universal OpenMath Machine

package org.openmath.www.cd
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

trait set2 extends TheoryScala {
  def set2_lift_binary(x1: Term, x2: Term, x3: Term): Term

}

object set2 extends TheoryScalaAux {
  val _base = DPath(utils.URI("http", "www.openmath.org") / "cd")
  val _path = _base ? "set2"

  object lift_binary extends ConstantScala {
    val parent = _path
    val name = "lift_binary"
    def apply(x1: Term, x2: Term, x3: Term) = OMA(OMID(this.path), x1 :: x2 :: x3:: Nil)
    def unapply(t: Term): Option[(Term, Term, Term)] = t match {
      case OMA(OMID(this.path), x1 :: x2 :: x3:: Nil) => Some((x1, x2, x3))
      case _ => None
    }
  }


}

