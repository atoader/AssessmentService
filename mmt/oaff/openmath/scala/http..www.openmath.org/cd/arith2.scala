//Source file generated by the Universal OpenMath Machine

package org.openmath.www.cd
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

trait arith2 extends TheoryScala {
  def arith2_times(): Term

  def arith2_inverse(x1: Term): Term

}

object arith2 extends TheoryScalaAux {
  val _base = DPath(utils.URI("http", "www.openmath.org") / "cd")
  val _path = _base ? "arith2"

  object times extends ConstantScala {
    val parent = _path
    val name = "times"
  }


  object inverse extends ConstantScala {
    val parent = _path
    val name = "inverse"
    def apply(x1: Term) = OMA(OMID(this.path), x1:: Nil)
    def unapply(t: Term): Option[Term] = t match {
      case OMA(OMID(this.path), x1:: Nil) => Some(x1)
      case _ => None
    }
  }


}

