//Source file generated by the Universal OpenMath Machine

package info.kwarc.oaff.openmath.test
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

trait Relation extends TheoryScala with org.openmath.www.cd.relation1 with org.openmath.www.cd.logic1 with org.openmath.www.cd.complex1 {
  val Relation_eqTest = _assert("Relation_eqTest", _ => (throw ParseError("""informal term "CC 1 2 = CC 1 2"""")), _ == logic1_true())

  val Relation_ltTest = _assert("Relation_ltTest", _ => relation1_lt(OMI(3), OMI(4)), _ == logic1_true())

  val Relation_gtTest = _assert("Relation_gtTest", _ => relation1_gt(OMI(4), OMI(3)), _ == logic1_true())

  val Relation_neqTest = _assert("Relation_neqTest", _ => relation1_neq(OMI(4), OMI(5)), _ == logic1_true())

  val Relation_leqTest = _assert("Relation_leqTest", _ => relation1_leq(OMI(4), OMI(5)), _ == logic1_true())

  val Relation_qeqTest = _assert("Relation_qeqTest", _ => relation1_geq(OMI(4), OMI(3)), _ == logic1_true())

}

object Relation extends TheoryScalaAux {
  val _base = DPath(utils.URI("http", "oaff.kwarc.info") / "openmath" / "test")
  val _path = _base ? "Relation"

  object eqTest extends ConstantScala {
    val parent = _path
    val name = "eqTest"
  }


  object ltTest extends ConstantScala {
    val parent = _path
    val name = "ltTest"
  }


  object gtTest extends ConstantScala {
    val parent = _path
    val name = "gtTest"
  }


  object neqTest extends ConstantScala {
    val parent = _path
    val name = "neqTest"
  }


  object leqTest extends ConstantScala {
    val parent = _path
    val name = "leqTest"
  }


  object qeqTest extends ConstantScala {
    val parent = _path
    val name = "qeqTest"
  }


}

