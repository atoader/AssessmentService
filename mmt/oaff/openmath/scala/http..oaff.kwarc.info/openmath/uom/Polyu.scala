//Source file generated by the Universal OpenMath Machine

package info.kwarc.oaff.openmath.uom
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

import org.openmath.www.cd._

import polyu._

trait Polyu extends ViewScala with polyu {
  // UOM start http://oaff.kwarc.info/openmath/uom?Polyu?term
  def polyu_term(x1: Term, x2: Term) : Term = {
    throw Unimplemented("polyu_term")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Polyu?term

  // UOM start http://oaff.kwarc.info/openmath/uom?Polyu?poly_u_rep
  def polyu_poly_u_rep(x1: Term, xs2: List[Term]) : Term = {
    throw Unimplemented("polyu_poly_u_rep")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Polyu?poly_u_rep

  // UOM start http://oaff.kwarc.info/openmath/uom?Polyu?polynomial_u
  def polyu_polynomial_u(x1: Term, x2: Term) : Term = {
    throw Unimplemented("polyu_polynomial_u")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Polyu?polynomial_u

  // UOM start http://oaff.kwarc.info/openmath/uom?Polyu?polynomial_ring_u
  def polyu_polynomial_ring_u(x1: Term, x2: Term) : Term = {
    throw Unimplemented("polyu_polynomial_ring_u")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Polyu?polynomial_ring_u

  declares(Implementation.AA(polyu.term.path)(polyu_term _))
  declares(Implementation.AS(polyu.poly_u_rep.path)(polyu_poly_u_rep _))
  declares(Implementation.AA(polyu.polynomial_u.path)(polyu_polynomial_u _))
  declares(Implementation.AA(polyu.polynomial_ring_u.path)(polyu_polynomial_ring_u _))

}

object Polyu extends Polyu

