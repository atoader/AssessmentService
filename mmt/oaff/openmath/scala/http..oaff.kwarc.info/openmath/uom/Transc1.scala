//Source file generated by the Universal OpenMath Machine

package info.kwarc.oaff.openmath.uom
import info.kwarc.mmt.api._
import objects._
import uom._
import ConstantScala._

import org.openmath.www.cd._

import transc1._

trait Transc1 extends ViewScala with transc1 {
  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccos
  def transc1_arccos(a: Term) : Term = {
    Numbers.transc(a, arccos(a), math.acos)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccos

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccosh
  def transc1_arccosh(x1: Term) : Term = {
    throw Unimplemented("transc1_arccosh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccosh

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccot
  def transc1_arccot(a: Term) : Term = {
    arith1.minus(arith1.divide(nums1.pi, OMI(2)), arctan(a))
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccot

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccoth
  def transc1_arccoth(x1: Term) : Term = {
    throw Unimplemented("transc1_arccoth")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccoth

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccsc
  def transc1_arccsc(x1: Term) : Term = {
    throw Unimplemented("transc1_arccsc")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccsc

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arccsch
  def transc1_arccsch(x1: Term) : Term = {
    throw Unimplemented("transc1_arccsch")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arccsch

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arcsec
  def transc1_arcsec(x1: Term) : Term = {
    throw Unimplemented("transc1_arcsec")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arcsec

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arcsech
  def transc1_arcsech(x1: Term) : Term = {
    throw Unimplemented("transc1_arcsech")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arcsech

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arcsin
  def transc1_arcsin(a: Term) : Term = {
    Numbers.transc(a, arcsin(a), math.asin)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arcsin

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arcsinh
  def transc1_arcsinh(x1: Term) : Term = {
    throw Unimplemented("transc1_arcsinh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arcsinh

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arctan
  def transc1_arctan(a: Term) : Term = {
    Numbers.transc(a, arctan(a), math.atan)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arctan

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?arctanh
  def transc1_arctanh(x1: Term) : Term = {
    throw Unimplemented("transc1_arctanh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?arctanh

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?cos
  def transc1_cos(a: Term) : Term = {
    Numbers.transc(a, cos(a), math.cos)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?cos

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?cosh
  def transc1_cosh(x1: Term) : Term = {
    throw Unimplemented("transc1_cosh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?cosh

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?cot
  def transc1_cot(a: Term) : Term = {
    arith1.divide(OMI(1), tan(a))
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?cot

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?coth
  def transc1_coth(x1: Term) : Term = {
    throw Unimplemented("transc1_coth")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?coth

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?csc
  def transc1_csc(x1: Term) : Term = {
    throw Unimplemented("transc1_csc")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?csc

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?csch
  def transc1_csch(x1: Term) : Term = {
    throw Unimplemented("transc1_csch")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?csch

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?exp
  def transc1_exp(a: Term) : Term = {
    Numbers.transc(a, exp(a), math.exp)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?exp

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?ln
  def transc1_ln(a: Term) : Term = {
    Numbers.transc(a, ln(a), math.log)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?ln

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?log
  def transc1_log(a: Term, b: Term) : Term = {
    arith1.divide(ln(a), ln(b))
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?log

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?sec
  def transc1_sec(x1: Term) : Term = {
    throw Unimplemented("transc1_sec")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?sec

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?sech
  def transc1_sech(x1: Term) : Term = {
    throw Unimplemented("transc1_sech")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?sech

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?sin
  def transc1_sin(a: Term) : Term = {
    Numbers.transc(a, sin(a), math.sin)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?sin

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?sinh
  def transc1_sinh(x1: Term) : Term = {
    throw Unimplemented("transc1_sinh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?sinh

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?tan
  def transc1_tan(a: Term) : Term = {
    Numbers.transc(a, tan(a), math.tan)
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?tan

  // UOM start http://oaff.kwarc.info/openmath/uom?Transc1?tanh
  def transc1_tanh(x1: Term) : Term = {
    throw Unimplemented("transc1_tanh")
  }
  // UOM end http://oaff.kwarc.info/openmath/uom?Transc1?tanh

  declares(Implementation.A(transc1.arccos.path)(transc1_arccos _))
  declares(Implementation.A(transc1.arccosh.path)(transc1_arccosh _))
  declares(Implementation.A(transc1.arccot.path)(transc1_arccot _))
  declares(Implementation.A(transc1.arccoth.path)(transc1_arccoth _))
  declares(Implementation.A(transc1.arccsc.path)(transc1_arccsc _))
  declares(Implementation.A(transc1.arccsch.path)(transc1_arccsch _))
  declares(Implementation.A(transc1.arcsec.path)(transc1_arcsec _))
  declares(Implementation.A(transc1.arcsech.path)(transc1_arcsech _))
  declares(Implementation.A(transc1.arcsin.path)(transc1_arcsin _))
  declares(Implementation.A(transc1.arcsinh.path)(transc1_arcsinh _))
  declares(Implementation.A(transc1.arctan.path)(transc1_arctan _))
  declares(Implementation.A(transc1.arctanh.path)(transc1_arctanh _))
  declares(Implementation.A(transc1.cos.path)(transc1_cos _))
  declares(Implementation.A(transc1.cosh.path)(transc1_cosh _))
  declares(Implementation.A(transc1.cot.path)(transc1_cot _))
  declares(Implementation.A(transc1.coth.path)(transc1_coth _))
  declares(Implementation.A(transc1.csc.path)(transc1_csc _))
  declares(Implementation.A(transc1.csch.path)(transc1_csch _))
  declares(Implementation.A(transc1.exp.path)(transc1_exp _))
  declares(Implementation.A(transc1.ln.path)(transc1_ln _))
  declares(Implementation.AA(transc1.log.path)(transc1_log _))
  declares(Implementation.A(transc1.sec.path)(transc1_sec _))
  declares(Implementation.A(transc1.sech.path)(transc1_sech _))
  declares(Implementation.A(transc1.sin.path)(transc1_sin _))
  declares(Implementation.A(transc1.sinh.path)(transc1_sinh _))
  declares(Implementation.A(transc1.tan.path)(transc1_tan _))
  declares(Implementation.A(transc1.tanh.path)(transc1_tanh _))

}

object Transc1 extends Transc1

