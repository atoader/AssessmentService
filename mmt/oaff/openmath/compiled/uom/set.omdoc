<omdoc base="http://www.openmath.org/uom/set.mmt">
        <view name="Set1" base="http://oaff.kwarc.info/openmath/uom" from="http://www.openmath.org/cd?set1" to="http://cds.omdoc.org/urtheories?ScalaOM">
           <metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#48.2.0-2746.107.1"/></metadata>
           <constant name="cartesian_product"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#140.4.2-471.13.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="args"><type><om:OMA position="0_1"><om:OMS position="0_1_0" base="http://cds.omdoc.org/urtheories" module="Scala" name="List"/>
              <om:OMS position="0_1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/>
      </om:OMA></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[var (sets, restArgs) = Collections.collectSets(args)
  	if (restArgs == Nil) {
  	  // we can only compute the product if all arguments are sets
  	  var prod = Collections.cartesianProduct(sets)
  	  set(prod.map(tensor1.tuple(_)))
  	} else {
  		cartesian_product(args)
  	}]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="emptyset"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#477.15.2-512.17.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMSF><om:text format="scala"><![CDATA[set(Nil)]]></om:text></om:OMSF></om:OMOBJ></constant><constant name="map"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#518.19.2-823.28.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="f"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[s match {
      case set(ls) => set(ls map (t => OMA(f, List(t))))
      case interval1.integer_interval(l,r) => (l,r) match {
      	case (OMI(a), OMI(b)) => map(f, set((a to b).toList.map(OMI(_))))
      	case _ => map(f,s)
      }
      case _ => map(f,s)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="size"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#827.30.2-976.35.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[s match {
      case set(ls) => if (Utils.isFullyKnown(s)) OMI(ls.length) else size(s)
      case _ => size(s)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="set"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#982.37.2-1060.39.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="args"><type><om:OMA position="0_1"><om:OMS position="0_1_0" base="http://cds.omdoc.org/urtheories" module="Scala" name="List"/>
              <om:OMS position="0_1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/>
      </om:OMA></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[set(args.distinct.sortBy(_.hashCode))]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="suchthat"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#1066.41.2-1125.43.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="p"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[suchthat(s,p)]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="intersect"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#1131.45.2-1478.54.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="args"><type><om:OMA position="0_1"><om:OMS position="0_1_0" base="http://cds.omdoc.org/urtheories" module="Scala" name="List"/>
              <om:OMS position="0_1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/>
      </om:OMA></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[var (sets, restArgs) = Collections.collectSets(args)
  	(sets, restArgs) match {
      case (Nil, Nil) => set(Nil)
      case (Nil, _) => intersect(restArgs)
      case _ => 
        var res = set(sets.reduceLeft(_.intersect(_)))
        if (restArgs == Nil) res else intersect(res :: restArgs) 
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="union"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#1485.56.2-1817.65.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="args"><type><om:OMA position="0_1"><om:OMS position="0_1_0" base="http://cds.omdoc.org/urtheories" module="Scala" name="List"/>
              <om:OMS position="0_1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/>
      </om:OMA></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[var (sets, restArgs) = Collections.collectSets(args)
  	(sets, restArgs) match {
      case (Nil, Nil) => set(Nil)
      case (Nil, _) => union(restArgs)
      case _ => 
        var res = set(sets.reduceLeft(_.union(_)))
        if (restArgs == Nil) res else union(res :: restArgs) 
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="in"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#1824.67.2-1965.72.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="a"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[s match {
      case set(ls) => logic1.or(ls.map(relation1.OMeq(_, a)))
      case _ => in(a,s)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="notin"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#1971.74.2-2033.76.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="a"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[logic1.not(in(a,s))]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="setdiff"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2039.78.2-2193.83.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s1"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s2"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[(s1, s2) match {
      case (set(ls1), set(ls2)) => set(ls1.diff(ls2))
      case _ => setdiff(s1,s2)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="subset"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2200.85.2-2368.90.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s1"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s2"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[(s1, s2) match {
      case (set(ls1), set(ls2)) => Utils.ombool(ls1.diff(ls2) == Nil)
      case _ => subset(s1,s2)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="prsubset"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2374.92.2-2575.97.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s1"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s2"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[s1 match {
    	case set(ls) => if (ls == Nil) logic1.`false` else logic1.and(subset(s1, s2), relation1.neq(s1, s2))
  	  case _ => prsubset(s1, s2)
  	}]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="notsubset"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2581.99.2-2656.101.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s1"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s2"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[logic1.not(subset(s1, s2))]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant><constant name="notprsubset"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2662.103.2-2741.105.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="s1"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s2"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[logic1.not(prsubset(s1, s2))]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant>
         </view><view name="Set2" base="http://oaff.kwarc.info/openmath/uom" from="http://www.openmath.org/cd?set2" to="http://cds.omdoc.org/urtheories?ScalaOM">
           <metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2752.109.0-3090.118.1"/></metadata>
           <constant name="lift_binary"><metadata><link rel="http://cds.omdoc.org/mmt?metadata?sourceRef" resource="http://www.openmath.org/uom/set.mmt#2846.111.2-3085.116.4"/></metadata><om:OMOBJ xmlns:om="http://www.openmath.org/OpenMath"><om:OMBIND><om:OMS position="0" base="http://cds.omdoc.org/urtheories" module="Scala" name="Lambda"/>
                 <om:OMBVAR><om:OMV position="0" name="op"><type><om:OMS position="0_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="1" name="s1"><type><om:OMS position="1_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV><om:OMV position="2" name="s2"><type><om:OMS position="2_1" base="http://cds.omdoc.org/urtheories" module="ScalaOM" name="Term"/></type></om:OMV></om:OMBVAR>
                 <om:OMSF><om:text format="scala"><![CDATA[(s1, s2) match {
      case (set1.set(ls1), set1.set(ls2)) => set1.set(Collections.cartesianProduct(List(ls1, ls2)).map(OMA(op, _)))
      case _ => lift_binary(op, s1, s2)
    }]]></om:text></om:OMSF>
      </om:OMBIND></om:OMOBJ></constant>
         </view>
     </omdoc>